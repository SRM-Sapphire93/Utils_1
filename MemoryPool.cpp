#include "MemoryPool.h"
#include "Packet.h"
template <typename T> 
CMemoryPool<T>* CMemoryPool<T>::m_pInstance = nullptr;

void MemoryPool_StreamPush(void* p)
{
    CStream* pStream = (CStream*)p;
    pStream->Clear();

    CMemoryPool<CStream>::Push(pStream);
}

void MemoryPool_PacketPush(int TYPE , void* p)
{
    ((CPacket*)p)->Clear();

    switch (TYPE)
    {
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_TEST, p);
        CASEMEMORYPUSHTOPOOL(PACKET_CLIENT_2_SERVER_TEST, p);
        CASEMEMORYPUSHTOPOOL(PACKET_CLIENT_2_SERVER_RTTSLAVEMASTER, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_GIVESESSIONID, p);
        CASEMEMORYPUSHTOPOOL(PACKET_CLIENT_2_SERVER_LOGINREQUEST, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_LOGINOKAY, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_LOGINFAIL, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_RTTSTART, p);
        CASEMEMORYPUSHTOPOOL(PACKET_CLIENT_2_SERVER_RTTRESPONSE, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_NOTIFYRTT, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_MOVEUSER, p);
        CASEMEMORYPUSHTOPOOL(PACKET_CLIENT_2_SERVER_MOVEUSER, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_CANCELMOVE, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_CREATEUSER, p);
        CASEMEMORYPUSHTOPOOL(PACKET_CLIENT_2_SERVER_CHANGEDIRECTION, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_CHANGEDIRECTION, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_STATEACTION, p);
        CASEMEMORYPUSHTOPOOL(PACKET_CLIENT_2_SERVER_STATEACTION, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_REMOVEOBJECT, p);
        CASEMEMORYPUSHTOPOOL(PACKET_CLIENT_2_SERVER_DIALOGSTART, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_DIALOGSTART, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLIENT_MAGICEFFECTDISPLAY, p);
        CASEMEMORYPUSHTOPOOL(PACKET_CLIENT_2_SERVER_USEMAGIC, p);
        CASEMEMORYPUSHTOPOOL(PACKET_SERVER_2_CLINET_POSANDSTATUS, p);
       

    default:
        break;
    }

}

void PacketPoolInitialize()
{
    for (int i = 0; i < ENUM_NETPACKET_TYPE::PACKET_END; ++i)
    {
        switch (i)
        {
            POOLINITIALIZE(PACKET_SERVER_2_CLIENT_TEST)
                POOLINITIALIZE(PACKET_CLIENT_2_SERVER_TEST)
                POOLINITIALIZE(PACKET_CLIENT_2_SERVER_RTTSLAVEMASTER)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_GIVESESSIONID)
                POOLINITIALIZE(PACKET_CLIENT_2_SERVER_LOGINREQUEST)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_LOGINOKAY)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_LOGINFAIL)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_RTTSTART)
                POOLINITIALIZE(PACKET_CLIENT_2_SERVER_RTTRESPONSE)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_NOTIFYRTT)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_MOVEUSER)
                POOLINITIALIZE(PACKET_CLIENT_2_SERVER_MOVEUSER)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_CANCELMOVE)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_CREATEUSER)
                POOLINITIALIZE(PACKET_CLIENT_2_SERVER_CHANGEDIRECTION)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_CHANGEDIRECTION)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_STATEACTION)
                POOLINITIALIZE(PACKET_CLIENT_2_SERVER_STATEACTION)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_REMOVEOBJECT)
                POOLINITIALIZE(PACKET_CLIENT_2_SERVER_DIALOGSTART)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_DIALOGSTART)
                POOLINITIALIZE(PACKET_SERVER_2_CLIENT_MAGICEFFECTDISPLAY)
                POOLINITIALIZE(PACKET_CLIENT_2_SERVER_USEMAGIC)
                POOLINITIALIZE(PACKET_SERVER_2_CLINET_POSANDSTATUS)

        default:
            break;
        }
    }
    



}
